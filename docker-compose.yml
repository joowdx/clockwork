services:
    clockwork.app:
        build:
            context: ./docker
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        container_name: clockwork.app
        image: 'joowdx/laravel:clockwork'
        restart: unless-stopped
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
            SUPERVISOR_PHP_COMMAND: '${SUPERVISOR_PHP_COMMAND:-/usr/bin/php -d variables_order=EGPCS /var/www/html/artisan octane:start --task-workers=12 --host=0.0.0.0 --port=80}'
            TIMESTAMP_URL: '${TIMESTAMP_URL}'
        volumes:
            - '.:/var/www/html'
        networks:
            - clockwork
        depends_on:
            - pgsql
            - redis
    nginx:
        container_name: clockwork.webserver
        image: 'nginx:alpine'
        restart: unless-stopped
        ports:
            - '${APP_PORT:-80}:80'
            - '${SECURE_APP_PORT:-443}:443'
            - '${WEBSOCKET_APP_PORT:-6001}:6001'
        volumes:
            - '.:/usr/share/nginx/html'
            - './docker/nginx.conf:/etc/nginx/nginx.conf'
            - './docker/private:/etc/ssl/private:ro'
        networks:
            - clockwork
        depends_on:
            - clockwork.app
        healthcheck:
            test:
                - CMD
                - 'wget -O /dev/null http://localhost || exit 1'
            timeout: 10s
    pgsql:
        container_name: clockwork.database
        image: 'postgres:15'
        restart: unless-stopped
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'clockwork-pgsql:/var/lib/postgresql/data'
            - './docker/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - clockwork
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s
    redis:
        container_name: clockwork.cache
        image: 'redis:alpine'
        restart: unless-stopped
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'clockwork-redis:/data'
        networks:
            - clockwork
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    mailpit:
        container_name: clockwork.testmail
        image: 'axllent/mailpit:latest'
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        environment:
            APP_ENV: '${APP_ENV:-production}'
        entrypoint:
            - sh
            - '-c'
            - "if [ \"$APP_ENV\" != \"production\" ]; then\n    exec /mailpit\nelse\n    exit 0\nfi\n"
        depends_on:
            - clockwork.app
        networks:
            - clockwork
networks:
    clockwork:
        name: clockwork
        driver: bridge
volumes:
    clockwork-pgsql:
        name: clockwork.pgsql
        driver: local
    clockwork-redis:
        name: clockwork.redis
        driver: local
